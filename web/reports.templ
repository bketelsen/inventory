package web

import (
	"fmt"
	"github.com/bketelsen/inventory"
	"time"

	"strconv"
)

templ headerTemplate(name string) {
	<header data-testid="headerTemplate">
		<h1>{ name }</h1>
	</header>
}

templ footerTemplate() {
	<footer data-testid="footerTemplate">
		<div>&copy; { fmt.Sprintf("%d", time.Now().Year()) }</div>
	</footer>
}

templ navTemplate() {
	<nav data-testid="navTemplate">
		<ul>
			<li><a href="/">Home</a></li>
			<li><a href="/reports">Reports</a></li>
		</ul>
	</nav>
}

templ layout(name string, reports []inventory.Report) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
			<title>{ name }</title>
			<!--begin::Primary Meta Tags-->
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<meta name="title" content="Inventory | Service Dashboard"/>
			<meta name="author" content="ColorlibHQ"/>
			<meta
				name="description"
				content="Inventory is an application that tracks deployed services/containers."
			/>
			<!--end::Primary Meta Tags-->
			<!--begin::Fonts-->
			<link
				rel="stylesheet"
				href="https://cdn.jsdelivr.net/npm/@fontsource/source-sans-3@5.0.12/index.css"
				integrity="sha256-tXJfXfp6Ewt1ilPzLDtQnJV4hclT9XuaZUKyUvmyr+Q="
				crossorigin="anonymous"
			/>
			<!--end::Fonts-->
			<!--begin::Third Party Plugin(OverlayScrollbars)-->
			<link
				rel="stylesheet"
				href="https://cdn.jsdelivr.net/npm/overlayscrollbars@2.10.1/styles/overlayscrollbars.min.css"
				integrity="sha256-tZHrRjVqNSRyWg2wbppGnT833E/Ys0DHWGwT04GiqQg="
				crossorigin="anonymous"
			/>
			<!--end::Third Party Plugin(OverlayScrollbars)-->
			<!--begin::Third Party Plugin(Bootstrap Icons)-->
			<link
				rel="stylesheet"
				href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"
				integrity="sha256-9kPW/n5nn53j4WMRYAxe9c1rCY96Oogo/MKSVdKzPmI="
				crossorigin="anonymous"
			/>
			<!--end::Third Party Plugin(Bootstrap Icons)-->
			<!--begin::Required Plugin(AdminLTE)-->
			<link rel="stylesheet" href="/static/css/adminlte.css"/>
			<!--end::Required Plugin(AdminLTE)-->
			<!-- apexcharts -->
			<link
				rel="stylesheet"
				href="https://cdn.jsdelivr.net/npm/apexcharts@3.37.1/dist/apexcharts.css"
				integrity="sha256-4MX+61mt9NVvvuPjUWdUdyfZfxSB1/Rf9WtqRHgG5S0="
				crossorigin="anonymous"
			/>
		</head>
		<body class="layout-fixed sidebar-expand-lg bg-body-tertiary">
			<!--begin::App Wrapper-->
			<div class="app-wrapper">
				<!--begin::Header-->
				<nav class="app-header navbar navbar-expand bg-body">
					<!--begin::Container-->
					<div class="container-fluid">
						<!--begin::Start Navbar Links-->
						<ul class="navbar-nav">
							<li class="nav-item">
								<a class="nav-link" data-lte-toggle="sidebar" href="#" role="button">
									<i class="bi bi-list"></i>
								</a>
							</li>
							<li class="nav-item d-none d-md-block"><a href="/" class="nav-link">Home</a></li>
							<li class="nav-item d-none d-md-block"><a href="#" class="nav-link">Contact</a></li>
						</ul>
						<!--end::Start Navbar Links-->
						<!--begin::End Navbar Links-->
						<ul class="navbar-nav ms-auto"></ul>
						<!--end::End Navbar Links-->
					</div>
					<!--end::Container-->
				</nav>
				<!--end::Header-->
				<!--begin::Sidebar-->
				<aside class="app-sidebar bg-body-secondary shadow" data-bs-theme="dark">
					<!--begin::Sidebar Brand-->
					<div class="sidebar-brand">
						<!--begin::Brand Link-->
						<a href="/" class="brand-link">
							<!--begin::Brand Image-->
							<img
								src="/static/assets/img/AdminLTELogo.png"
								alt="Inventory Logo"
								class="brand-image opacity-75 shadow"
							/>
							<!--end::Brand Image-->
							<!--begin::Brand Text-->
							<span class="brand-text fw-light">Inventory</span>
							<!--end::Brand Text-->
						</a>
						<!--end::Brand Link-->
					</div>
					<!--end::Sidebar Brand-->
					<!--begin::Sidebar Wrapper-->
					<div class="sidebar-wrapper">
						<nav class="mt-2">
							<!--begin::Sidebar Menu-->
							<ul
								class="nav sidebar-menu flex-column"
								data-lte-toggle="treeview"
								role="menu"
								data-accordion="false"
							>
								<li class="nav-item menu-open">
									<a href="#" class="nav-link active">
										<i class="nav-icon bi bi-speedometer"></i>
										<p>
											Inventory
											<i class="nav-arrow bi bi-chevron-right"></i>
										</p>
									</a>
									<ul class="nav nav-treeview">
										<li class="nav-item">
											<a href="/" class="nav-link">
												<i class="nav-icon bi bi-circle"></i>
												<p>All</p>
											</a>
										</li>
										for _, report := range reports {
											<li class="nav-item">
												<a href={ templ.URL("/?host=" + report.Host.HostName) } class="nav-link">
													<i class="nav-icon bi bi-circle"></i>
													<p>{ report.Host.HostName }</p>
												</a>
											</li>
										}
									</ul>
								</li>
							</ul>
							<!--end::Sidebar Menu-->
						</nav>
					</div>
					<!--end::Sidebar Wrapper-->
				</aside>
				<!--end::Sidebar-->
				<main class="app-main">
					{ children... }
				</main>
			</div>
			<!--begin::Script-->
			<!--begin::Third Party Plugin(OverlayScrollbars)-->
			<script src="https://cdn.jsdelivr.net/npm/overlayscrollbars@2.10.1/browser/overlayscrollbars.browser.es6.min.js" integrity="sha256-dghWARbRe2eLlIJ56wNB+b760ywulqK3DzZYEpsg2fQ=" crossorigin="anonymous"></script>
			<!--end::Third Party Plugin(OverlayScrollbars)-->
			<!--begin::Required Plugin(popperjs for Bootstrap 5)-->
			<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
			<!--end::Required Plugin(popperjs for Bootstrap 5)-->
			<!--begin::Required Plugin(Bootstrap 5)-->
			<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>
			<!--end::Required Plugin(Bootstrap 5)-->
			<!--begin::Required Plugin(AdminLTE)-->
			<script src="/static/js/adminlte.js"></script>
			<!--end::Required Plugin(AdminLTE)-->
			<!--begin::OverlayScrollbars Configure-->
			<script>
      const SELECTOR_SIDEBAR_WRAPPER = '.sidebar-wrapper';
      const Default = {
        scrollbarTheme: 'os-theme-light',
        scrollbarAutoHide: 'leave',
        scrollbarClickScroll: true,
      };
      document.addEventListener('DOMContentLoaded', function () {
        const sidebarWrapper = document.querySelector(SELECTOR_SIDEBAR_WRAPPER);
        if (sidebarWrapper && typeof OverlayScrollbarsGlobal?.OverlayScrollbars !== 'undefined') {
          OverlayScrollbarsGlobal.OverlayScrollbars(sidebarWrapper, {
            scrollbars: {
              theme: Default.scrollbarTheme,
              autoHide: Default.scrollbarAutoHide,
              clickScroll: Default.scrollbarClickScroll,
            },
          });
        }
      });
    </script>
			<!--end::Script-->
		</body>
	</html>
}

templ hostsList(reports []inventory.Report) {
	@hostTable(reports)
	@serviceTable(reports)
	@containerTable(reports)
	@listenerTable(reports)
}

templ contentHeader(name string) {
	<div class="app-content-header">
		<!--begin::Container-->
		<div class="container-fluid">
			<!--begin::Row-->
			<div class="row">
				<div class="col-sm-6"><h3 class="mb-0">{ name }</h3></div>
				<div class="col-sm-6">
					<ol class="breadcrumb float-sm-end">
						<li class="breadcrumb-item"><a href="#">Home</a></li>
						<li class="breadcrumb-item active" aria-current="page">{ name } </li>
					</ol>
				</div>
			</div>
			<!--end::Row-->
		</div>
		<!--end::Container-->
	</div>
}

templ appContent() {
	<div class="app-content">
		<!--begin::Container-->
		<div class="container-fluid">
			{ children... }
		</div>
		<!--end::Container-->
	</div>
	<!--end::App Content-->
}

templ row() {
	<div class="row">
		{ children... }
	</div>
	<!--end::Row-->
}

templ statistic(value string, label string) {
	<div class="col-12 col-sm-6 col-md-3">
		<div class="info-box">
			<span class="info-box-icon text-bg-primary shadow-sm">
				<i class="bi bi-gear-fill"></i>
			</span>
			<div class="info-box-content">
				<span class="info-box-text">{ label }</span>
				<span class="info-box-number">
					{ value }
				</span>
			</div>
			<!-- /.info-box-content -->
		</div>
		<!-- /.info-box -->
	</div>
}

templ reports(reports []inventory.Report) {
	@layout("Inventory | Services", reports) {
		@contentHeader("All")
		@appContent() {
			<h5 class="mb-2">All Hosts</h5>
			@row() {
				@statistic(strconv.Itoa(len(reports)), "Hosts")
				@statistic(strconv.Itoa(serviceCount(reports)), "Services")
				@statistic(strconv.Itoa(listenerCount(reports)), "Listeners")
				@statistic(strconv.Itoa(containerCount(reports)), "Containers")
			}
			@row() {
				@hostsList(reports)
			}
		}
	}
}

func serviceCount(reports []inventory.Report) int {
	count := 0
	for _, report := range reports {
		count += len(report.Services)
	}
	return count
}

func listenerCount(reports []inventory.Report) int {
	count := 0
	for _, report := range reports {
		count += len(report.Listeners)
	}
	return count
}

func containerCount(reports []inventory.Report) int {
	count := 0
	for _, report := range reports {
		count += len(report.Containers)
	}
	return count
}

templ containerTable(reports []inventory.Report) {
	<div class="card mb-4">
		<div class="card-header border-0">
			<h3 class="card-title">Containers</h3>
		</div>
		<div class="card-body table-responsive p-0">
			<table class="table table-striped align-middle">
				<thead>
					<tr>
						<th>Host</th>
						<th>ID</th>
						<th>IP</th>
						<th>Ports</th>
						<th>HostName</th>
						<th>Image</th>
						<th>Platform</th>
					</tr>
				</thead>
				<tbody>
					for _, report := range reports {
						for _, container := range report.Containers {
							<tr>
								<td>
									{ report.Host.HostName }
								</td>
								<td>
									{ container.ContainerID }
								</td>
								<td>{ container.IP.String() }</td>
								<td>
									for _, port := range container.Ports {
										{ port }
										<br/>
									}
								</td>
								<td>
									{ container.HostName }
								</td>
								<td>
									{ container.Image }
								</td>
								<td>
									{ container.Platform.String() }
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
	</div>
}

templ serviceTable(reports []inventory.Report) {
	<div class="card mb-4">
		<div class="card-header border-0">
			<h3 class="card-title">Services</h3>
		</div>
		<div class="card-body table-responsive p-0">
			<table class="table table-striped align-middle">
				<thead>
					<tr>
						<th>Host</th>
						<th>Name</th>
						<th>Listen</th>
						<th>Unit</th>
					</tr>
				</thead>
				<tbody>
					for _, report := range reports {
						for _, service := range report.Services {
							<tr>
								<td>
									{ report.Host.HostName }
								</td>
								<td>
									{ service.Name }
								</td>
								<td>
								for _, l := range service.Listeners {
									{ l.ListenAddress }:{ strconv.Itoa(int(l.Port)) }/{ l.Protocol }<br/>
								}
								</td>
								<td>
									{ service.Unit }
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
	</div>
}

templ hostTable(reports []inventory.Report) {
	<div class="card mb-4">
		<div class="card-header border-0">
			<h3 class="card-title">Servers</h3>
		</div>
		<div class="card-body table-responsive p-0">
			<table class="table table-striped align-middle">
				<thead>
					<tr>
						<th>Name</th>
						<th>IP</th>
						<th>Location</th>
						<th>Description</th>
						<th>Last Update</th>
					</tr>
				</thead>
				<tbody>
					for _, report := range reports {
						<tr>
							<td>
								{ report.Host.HostName }
							</td>
							<td>
								{ report.Host.IP }
							</td>
							<td>{ report.Host.Location }</td>
							<td>
								{ report.Host.Description }
							</td>
							<td>
								{ report.DisplayTime() }
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
}

templ listenerTable(reports []inventory.Report) {
	<div class="card mb-4">
		<div class="card-header border-0">
			<h3 class="card-title">Listeners</h3>
		</div>
		<div class="card-body table-responsive p-0">
			<table class="table table-striped align-middle">
				<thead>
					<tr>
						<th>Host</th>
						<th>Address</th>
						<th>Port</th>
						<th>PID</th>
						<th>Program</th>
					</tr>
				</thead>
				<tbody>
					for _, report := range reports {
						for _, listener := range report.Listeners {
							<tr>
								<td>
									{ report.Host.HostName }
								</td>
								<td>
									{ listener.ListenAddress.String() }
								</td>
								<td>{ strconv.Itoa(int(listener.Port)) }</td>
								<td>
									{ strconv.Itoa(listener.PID) }
								</td>
								<td>
									{ listener.Program }
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
	</div>
}

func containerAnchor(host, id string) string {
	return fmt.Sprintf("#%s-%s", host, id)
}
