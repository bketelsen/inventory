# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2
project_name: inventory
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    - go install github.com/a-h/templ/cmd/templ@latest
    - mkdir -p bins
    - wget -O bins/tailwindcli https://github.com/dobicinaitis/tailwind-cli-extra/releases/download/v2.1.12/tailwindcss-extra-linux-x64
    - chmod +x bins/tailwindcli
    - bins/tailwindcli -c tailwind.config.js -i web/styles/styles.css -o web/static/index.css
    - templ generate
    - ./scripts/completions.sh
    - ./scripts/manpages.sh

builds:
  - env:
      - CGO_ENABLED=0
      - NOCOLOR=1
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    binary: inventory
    id: inventory
    main: ./cmd/inventory
    # Default: '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser'.
    # Templates: allowed.
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser
archives:
  - formats: [ 'tar.gz' ]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [ 'zip' ]
    files:
      - src: "manpages/*"
        strip_parent: true
nfpms:
  - file_name_template: "{{ .ProjectName }}_{{ .Arch }}"
    homepage: https://github.com/bketelsen/inventory
    description: inventory is an application that tracks deployed services/containers
    maintainer: Brian Ketelsen <bketelsen@gmail.com>
    license: MIT
    vendor: Brian Ketelsen
    formats:
      - deb
      - rpm
      - apk
      - archlinux
    contents:
          # Simple config file
      - src: contrib/inventory.yaml
        dst: /etc/inventory/inventory.example.yaml
        type: config

changelog:
  sort: asc
  use: github
  format: "{{ .SHA }}: {{ .Message }}{{ with .AuthorUsername }} (@{{ . }}){{ end }}"
  filters:
    exclude:
      - "^test:"
      - "^test\\("
      - "^chore: update$"
      - "^chore: docs$"
      - "^docs: update$"
      - "^chore: typo$"
      - "^chore: auto-update generated files$"
      - "^chore\\(deps\\): "
      - "^(build|ci): "
      - "merge conflict"
      - "merge conflict"
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
  groups:
    - title: "New Features"
      regexp: '^.*?feat(\(.+\))??!?:.+$'
      order: 100
    - title: "Security updates"
      regexp: '^.*?sec(\(.+\))??!?:.+$'
      order: 150
    - title: "Bug fixes"
      regexp: '^.*?(fix|refactor)(\(.+\))??!?:.+$'
      order: 200
    - title: "Documentation updates"
      regexp: ^.*?docs?(\(.+\))??!?:.+$
      order: 400
    - title: Other work
      order: 9999

release:
  footer: >-

    ---

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).

announce:
  bluesky:
    # Whether it's enabled or not.
    #
    # Templates: allowed (since v2.6).
    enabled: false

    # Message template to use while publishing.
    #
    # Default: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'.
    # Templates: allowed.
    message_template: "Fresh bits hot off the pipeline!\n\n{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}\n\nUse {{ .ProjectName }} to track your deployed containers and virtual machines."

    # The username of the account that will post
    # to Bluesky
    username: "brian.dev"
dockers:
  - image_templates:
      - "ghcr.io/bketelsen/inventory:{{ .Version }}-amd64"
      - "ghcr.io/bketelsen/inventory:latest-amd64"
    use: buildx
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/amd64"
  - image_templates:
      - "ghcr.io/bketelsen/inventory:{{ .Version }}-arm64v8"
      - "ghcr.io/bketelsen/inventory:latest-arm64v8"
    use: buildx
    goarch: arm64
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/arm64/v8"
docker_manifests:
  - name_template: "ghcr.io/bketelsen/inventory:{{ .Version }}"
    image_templates:
      - "ghcr.io/bketelsen/inventory:{{ .Version }}-amd64"
      - "ghcr.io/bketelsen/inventory:{{ .Version }}-arm64v8"